plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id 'com.google.cloud.tools.jib' version '1.8.0'
}



version "0.1"
group "dev.deskriders.sketchrider"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compileOnly             "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor     "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor     platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor     "io.micronaut:micronaut-inject-java"
    annotationProcessor     "io.micronaut:micronaut-validation"

    annotationProcessor     "io.micronaut:micronaut-security"
    implementation          "io.micronaut:micronaut-security-jwt"
    implementation          "io.micronaut.configuration:micronaut-security-oauth2"

    implementation          platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation          "io.micronaut:micronaut-inject"
    implementation          "io.micronaut:micronaut-validation"
    implementation          "io.micronaut:micronaut-runtime"

    implementation          "com.amazonaws:aws-java-sdk-dynamodb:${awsDynamoDbVersion}"
    implementation          "io.micronaut:micronaut-views"
    implementation          "io.micronaut:micronaut-views-thymeleaf"

    implementation          "javax.annotation:javax.annotation-api"
    implementation          "io.micronaut:micronaut-http-server-netty"
    implementation          "io.micronaut:micronaut-http-client"

    runtimeOnly             "ch.qos.logback:logback-classic:${logbackVersion}"
    runtimeOnly             "org.thymeleaf:thymeleaf:${thymeleafVersion}"

    // Test dependencies
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation      platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation      "org.junit.jupiter:junit-jupiter-api"
    testImplementation      "io.micronaut.test:micronaut-test-junit5"
    testImplementation      "org.jeasy:easy-random-core:${easyRandomVersion}"
    testImplementation      "org.assertj:assertj-core:${assertjVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "dev.deskriders.sketchrider.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
